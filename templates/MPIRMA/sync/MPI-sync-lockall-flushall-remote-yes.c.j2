{% extends "templates/MPIRMA/MPI-boilerplate.c.j2" %}

{%- block race_labels %}
// RACE LABELS BEGIN
/*
{
    "RACE_KIND": "remote",
    "ACCESS_SET": ["rma write","load"],
    "NPROCS": 2,
    "RACE_PAIR": ["MPI_Put@{race_loc1}","LOAD@{race_loc2}"],
    "CONSISTENCY_CALLS": ["MPI_Win_lock_all","MPI_Win_unlock_all","MPI_Win_flush_all"],
    "SYNC_CALLS": ["MPI_Barrier"],
    "DESCRIPTION": "Two conflicting operations put and load with flush_all (non-collective), but missing synchronization."
}
*/
// RACE LABELS END
{%- endblock race_labels %}


{% block main %}


    MPI_Win_lock_all(0, win);
    MPI_Barrier(MPI_COMM_WORLD);

    if (rank == 0) {
        value = 1;
        // CONFLICT
        MPI_Put(&value, 1, MPI_INT, 1, 0, 1, MPI_INT, win);
        MPI_Win_flush_all(win);
    }

    if (rank == 1) {
        // CONFLICT
        printf("win_base[0] is %d\n", win_base[0]);
    }

    MPI_Win_unlock_all(win);
    MPI_Barrier(MPI_COMM_WORLD);
    
    

{% endblock main %}

