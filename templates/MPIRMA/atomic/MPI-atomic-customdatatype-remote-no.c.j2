{% extends "templates/MPIRMA/MPI-boilerplate.c.j2" %}

{% block race_labels %}
// RACE LABELS BEGIN
/*
{
    "RACE_KIND": "none",
    "ACCESS_SET": ["rma atomic write","rma atomic write"],
    "NPROCS": 3,
    "CONSISTENCY_CALLS": ["MPI_Win_fence"],
    "SYNC_CALLS": ["MPI_Barrier", "MPI_Win_fence"],
    "DESCRIPTION": "Two atomic operations acc and acc using a custom datatype. The atomicity is guaranteed based on the predefined datatype."
}
*/
// RACE LABELS END
{% endblock race_labels %}

{% block main %}


    MPI_Barrier(MPI_COMM_WORLD);

    MPI_Datatype dtype;
    MPI_Type_contiguous(4, MPI_INT, &dtype);
    MPI_Type_commit(&dtype);

    MPI_Win_fence(0, win);
    if (rank == 0) {
        int value1[4] = {1, 1, 1, 1};
        MPI_Accumulate(value1, 4, MPI_INT, 1, 0, 4, MPI_INT, MPI_SUM, win);
    }
    if (rank == 2) {
        int value2[4] = {1, 2, 3, 4};
        MPI_Accumulate(value2, 1, dtype, 1, 0, 1, dtype, MPI_SUM, win);
    }
    MPI_Win_fence(0, win);

    MPI_Type_free(&dtype);
    
    
{% endblock main %}
