{% extends "templates/SHMEM/shmem-boilerplate.c.j2" %}

{%- block race_labels %}
// RACE LABELS BEGIN
/*
{
    "RACE_KIND": "remote",
    "ACCESS_SET": ["rma write","local read"],
    "RACE_PAIR": ["LOAD@{race_loc1}","shmem_int_put_signal@{race_loc2}"],
    "CONSISTENCY_CALLS": ["shmem_barrier_all"],
    "SYNC_CALLS": ["shmem_signal_fetch"],
    "NPROCS": 2,
    "DESCRIPTION": "Signalled put where PE 0 polls with plain LOADs on the signal instead of using shmem_signal_fetch."
}
*/
// RACE LABELS END
{%- endblock race_labels %}

{% block preamble %}
{% endblock preamble %}

{% block main %}
    static uint64_t signal = 0;

    shmem_barrier_all();

    if( my_pe == 0 )
    {
        // CONFLICT
        while( signal < PROC_NUM - 1 )
        {
            continue;
        }

        printf( "Remote: %d\n", remote );
    }


    if (my_pe == 1)
    {
        localbuf = 2;
        // CONFLICT
        shmem_int_put_signal( &remote, &my_pe, 1, &signal, 1, SHMEM_SIGNAL_ADD, 0 );
    }
    shmem_barrier_all();

{% endblock main %}