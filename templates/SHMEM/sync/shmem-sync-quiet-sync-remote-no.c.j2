{% extends "templates/SHMEM/shmem-boilerplate.c.j2" %}

{% block race_labels %}
// RACE LABELS BEGIN
/*
{
    "RACE_KIND": "none",
    "ACCESS_SET": ["rma write","rma read"],
    "NPROCS": 2,
    "CONSISTENCY_CALLS": ["shmem_quiet"],
    "SYNC_CALLS": ["shmem_sync"],
    "DESCRIPTION": "Two conflicting operations put and get synchronized with shmem_quiet (consistency) and shmem_sync (process synchronization)."
}
*/
// RACE LABELS END
{% endblock race_labels %}

{% block main %}

    shmem_barrier_all();

    if( my_pe == 0 )
    {
        int myval = 42;
        shmem_int_put(&remote, &myval, 1, 1);
    }

    shmem_quiet();
    shmem_sync(SHMEM_TEAM_WORLD);

    if( my_pe == 1 )
    {
        shmem_int_get(&localbuf, &remote, 1, 1);
    }

    shmem_barrier_all();

    printf( "PE %d: localbuf = %d, remote = %d, \n", my_pe, localbuf, remote );

{% endblock main %}