{% extends "templates/SHMEM/shmem-boilerplate.c.j2" %}

{%- block race_labels %}
// RACE LABELS BEGIN
/*
{
    "RACE_KIND": "none",
    "ACCESS_SET": ["rma write","local read"],
    "CONSISTENCY_CALLS": ["shmem_barrier_all"],
    "SYNC_CALLS": ["shmem_signal_fetch"],
    "NPROCS": 2,
    "DESCRIPTION": "Signalled put where PE 0 polls on the signal of PE1."
}
*/
// RACE LABELS END
{%- endblock race_labels %}


{% block preamble %}
{% endblock preamble %}

{% block main %}
    static int data[PROC_NUM];
    static uint64_t signal = 0;

    shmem_barrier_all();

    if( my_pe == 0 )
    {
        while( shmem_signal_fetch( &signal ) != 1 ) // POLLING
        {
            continue;
        }

        printf( "Data on PE 0:" );
        for( int i = 0; i < PROC_NUM; ++i )
        {
            printf( " %d", data[i] ); // Potential conflict
        }
        printf( "\n" );
    }

    if( my_pe == 1 )
    {
        shmem_int_put_signal( &data[my_pe],
                              &my_pe,
                              1,
                              &signal,
                              1,
                              SHMEM_SIGNAL_ADD,
                              0 ); // Potential conflict
    }

    shmem_barrier_all();

{% endblock main %}