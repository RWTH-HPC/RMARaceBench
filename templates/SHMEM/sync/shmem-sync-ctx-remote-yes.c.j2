{% extends "templates/SHMEM/shmem-boilerplate.c.j2" %}

{%- block race_labels %}
// RACE LABELS BEGIN
/*
{
    "RACE_KIND": "remote",
    "ACCESS_SET": ["rma write","rma write"],
    "RACE_PAIR": ["shmem_ctx_int_put@{race_loc1}","shmem_ctx_int_put@{race_loc2}"],
    "CONSISTENCY_CALLS": ["shmem_quiet"],
    "SYNC_CALLS": ["shmem_barrier_all"],
    "NPROCS": 2,
    "DESCRIPTION": "Two conflicting shmem_ctx_put operations with shmem_quiet called on a wrong context, no consistency between the two puts."
}
*/
// RACE LABELS END
{%- endblock race_labels %}

{% block preamble %}
{% endblock preamble %}

{% block main %}
    shmem_ctx_t ctx;

    shmem_ctx_create( 0, &ctx );

    shmem_barrier_all();

    if( my_pe == 0 )
    {
        localbuf = 42;
        // CONFLICT
        shmem_ctx_int_put( ctx, &remote, &localbuf, 1, 1 );
        shmem_quiet();
        localbuf = 1337;
        // CONFLICT
        shmem_ctx_int_put( ctx, &remote, &localbuf, 1, 1 );
    }

    shmem_barrier_all();

    printf( "PE %d: %d\n", my_pe, remote );

{% endblock main %}