{% extends "templates/GASPI/GASPI-boilerplate.c.j2" %}

{%- block race_labels %}
// RACE LABELS BEGIN
/*
{
    "RACE_KIND": "remote",
    "ACCESS_SET": ["rma read","store"],
    "RACE_PAIR": ["gaspi_read@{race_loc1}","STORE@{race_loc2}"],
    "CONSISTENCY_CALLS": ["gaspi_wait"],
    "SYNC_CALLS": ["gaspi_passive_send,gaspi_passive_receive"],
    "NPROCS": 2,
    "DESCRIPTION": "Two conflicting operations gaspi_write and a local store with missing process synchronization, the gaspi_passive_receive call is too late in program order to ensure synchronization."
}
*/
// RACE LABELS END
{%- endblock race_labels %}
{% block preamble %}
{% endblock preamble %}

{% block main %}

    if (rank == 0) {
        // CONFLICT
        gaspi_read(loc_seg_id, 0, 1, remote_seg_id, 0, sizeof(int), queue_id, GASPI_BLOCK);
        gaspi_wait(queue_id, GASPI_BLOCK);
        printf("read result is %d\n", localbuf[0]);
        gaspi_passive_send(loc_seg_id, 0, 1, 4, GASPI_BLOCK);
    }

    if (rank == 1) {
        // CONFLICT
        remote_data[0] = 42;

        gaspi_rank_t source_rank;
        gaspi_passive_receive(loc_seg_id, 0, &source_rank, 4, GASPI_BLOCK);
        printf("received data from %d is %d\n", source_rank, localbuf[0]);
    }

{% endblock main %}